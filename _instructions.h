
__device__
const RegionComposition instructions[] = {
    /*0x00*//*BRK*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0xFFFF, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0xFF, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0xFFFF, .stack_offset_post_adjust=-1}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0x01*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0xFFFF, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x02*//*NOP*/RegionComposition{},
    /*0x03*//*NOP*/RegionComposition{},
    /*0x04*//*NOP*/RegionComposition{},
    /*0x05*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x06*//*ASL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0xFF, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x07*//*NOP*/RegionComposition{},
    /*0x08*//*PHP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0xFF, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0xFFFF, .stack_offset_post_adjust=-1}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x09*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x0A*//*ASL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0xFF, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x0B*//*NOP*/RegionComposition{},
    /*0x0C*//*NOP*/RegionComposition{},
    /*0x0D*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x0E*//*ASL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0xFF, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x0F*//*NOP*/RegionComposition{},
    /*0x10*//*BPL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0xFF, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x11*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0xFFFF, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x12*//*NOP*/RegionComposition{},
    /*0x13*//*NOP*/RegionComposition{},
    /*0x14*//*NOP*/RegionComposition{},
    /*0x15*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x16*//*ASL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0xFF, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x17*//*NOP*/RegionComposition{},
    /*0x18*//*CLC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x19*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x1A*//*NOP*/RegionComposition{},
    /*0x1B*//*NOP*/RegionComposition{},
    /*0x1C*//*NOP*/RegionComposition{},
    /*0x1D*//*ORA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0xFF, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x1E*//*ASL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0xFFFF, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0xFF, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x1F*//*NOP*/RegionComposition{},
    /*0x20*//*JSR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0xFFFF, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0x21*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0xFFFF, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x22*//*NOP*/RegionComposition{},
    /*0x23*//*NOP*/RegionComposition{},
    /*0x24*//*BIT*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0xFF}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0xFF, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=3, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x25*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x26*//*ROL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0xFF, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x27*//*NOP*/RegionComposition{},
    /*0x28*//*PLP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0xFFFF, .read_special_status_bits=0xFF, .stack_offset_pre_adjust=1}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0xFF}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x29*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x2A*//*ROL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0xFF, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x2B*//*NOP*/RegionComposition{},
    /*0x2C*//*BIT*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0xFF}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0xFF, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=3, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x2D*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x2E*//*ROL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0xFF, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x2F*//*NOP*/RegionComposition{},
    /*0x30*//*BMI*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=1, .N_flag_branch=0xFF, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x31*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0xFFFF, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x32*//*NOP*/RegionComposition{},
    /*0x33*//*NOP*/RegionComposition{},
    /*0x34*//*NOP*/RegionComposition{},
    /*0x35*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x36*//*ROL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0xFF, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x37*//*NOP*/RegionComposition{},
    /*0x38*//*SEC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0x00, .C_adjust=1, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x39*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x3A*//*NOP*/RegionComposition{},
    /*0x3B*//*NOP*/RegionComposition{},
    /*0x3C*//*NOP*/RegionComposition{},
    /*0x3D*//*AND*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0xFF, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x3E*//*ROL*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0xFFFF, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0xFF, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x3F*//*NOP*/RegionComposition{},
    /*0x40*//*RTI*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0xFFFF, .read_special_status_bits=0xFF, .stack_offset_pre_adjust=1}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0xFFFF, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0xFF}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x41*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0xFFFF, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x42*//*NOP*/RegionComposition{},
    /*0x43*//*NOP*/RegionComposition{},
    /*0x44*//*NOP*/RegionComposition{},
    /*0x45*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x46*//*LSR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0xFF, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x47*//*NOP*/RegionComposition{},
    /*0x48*//*PHA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0xFFFF, .stack_offset_post_adjust=-1}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x49*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x4A*//*LSR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0xFF, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x4B*//*NOP*/RegionComposition{},
    /*0x4C*//*JMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0xFFFF, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0x4D*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x4E*//*LSR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0xFF, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x4F*//*NOP*/RegionComposition{},
    /*0x50*//*BVC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0xFF, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x51*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0xFFFF, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x52*//*NOP*/RegionComposition{},
    /*0x53*//*NOP*/RegionComposition{},
    /*0x54*//*NOP*/RegionComposition{},
    /*0x55*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x56*//*LSR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0xFF, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x57*//*NOP*/RegionComposition{},
    /*0x58*//*NOP*/RegionComposition{},
    /*0x59*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x5A*//*NOP*/RegionComposition{},
    /*0x5B*//*NOP*/RegionComposition{},
    /*0x5C*//*NOP*/RegionComposition{},
    /*0x5D*//*EOR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0xFF, .value1_out=0xFF, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x5E*//*LSR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0xFFFF, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0xFF, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x5F*//*NOP*/RegionComposition{},
    /*0x60*//*RTS*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0xFFFF, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0x61*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0xFFFF, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x62*//*NOP*/RegionComposition{},
    /*0x63*//*NOP*/RegionComposition{},
    /*0x64*//*NOP*/RegionComposition{},
    /*0x65*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x66*//*ROR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x67*//*NOP*/RegionComposition{},
    /*0x68*//*PLA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0xFFFF, .read_special_status_bits=0x00, .stack_offset_pre_adjust=1}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x69*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x6A*//*ROR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x6B*//*NOP_*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=0}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0x6C*//*JMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0xFFFF, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0xFFFF, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0x6D*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x6E*//*ROR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x6F*//*NOP*/RegionComposition{},
    /*0x70*//*BVS*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=1, .N_flag_branch=0x00, .O_flag_branch=0xFF, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x71*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0xFFFF, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x72*//*NOP*/RegionComposition{},
    /*0x73*//*NOP*/RegionComposition{},
    /*0x74*//*NOP*/RegionComposition{},
    /*0x75*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x76*//*ROR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x77*//*NOP*/RegionComposition{},
    /*0x78*//*SEI*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0x00, .I_adjust=1, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x79*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x7A*//*NOP*/RegionComposition{},
    /*0x7B*//*NOP*/RegionComposition{},
    /*0x7C*//*NOP*/RegionComposition{},
    /*0x7D*//*ADC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0xFF, .value1_from_SBC=0x00, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x7E*//*ROR*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0xFFFF, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x7F*//*NOP*/RegionComposition{},
    /*0x80*//*NOP*/RegionComposition{},
    /*0x81*//*STA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0xFFFF, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x82*//*NOP*/RegionComposition{},
    /*0x83*//*NOP*/RegionComposition{},
    /*0x84*//*STY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0xFF, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x85*//*STA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x86*//*STX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0xFF, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x87*//*NOP*/RegionComposition{},
    /*0x88*//*DEY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0xFF, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=-1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x89*//*NOP*/RegionComposition{},
    /*0x8A*//*TXA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0xFF, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x8B*//*account*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x8C*//*STY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0xFF, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x8D*//*STA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x8E*//*STX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0xFF, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x8F*//*NOP*/RegionComposition{},
    /*0x90*//*BCC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0xFF}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x91*//*STA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0xFFFF, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x92*//*NOP*/RegionComposition{},
    /*0x93*//*NOP*/RegionComposition{},
    /*0x94*//*STY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0xFF, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x95*//*STA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x96*//*STX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0xFF, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0xFFFF, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0x97*//*NOP*/RegionComposition{},
    /*0x98*//*TYA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0xFF, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x99*//*STA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0xFFFF, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x9A*//*TXS*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0xFF}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0x9B*//*NOP*/RegionComposition{},
    /*0x9C*//*NOP*/RegionComposition{},
    /*0x9D*//*STA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0xFFFF, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0x9E*//*NOP*/RegionComposition{},
    /*0x9F*//*NOP*/RegionComposition{},
    /*0xA0*//*LDY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xA1*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0xFFFF, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xA2*//*LDX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xA3*//*NOP*/RegionComposition{},
    /*0xA4*//*LDY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xA5*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xA6*//*LDX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xA7*//*NOP*/RegionComposition{},
    /*0xA8*//*TAY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xA9*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xAA*//*TAX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0xFF, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xAB*//*DMA_read1*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=1}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0xFF, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0xAC*//*LDY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xAD*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xAE*//*LDX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xAF*//*NOP*/RegionComposition{},
    /*0xB0*//*BCS*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=1, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0xFF}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xB1*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0xFFFF, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xB2*//*DMA_write1*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=1}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0xFF}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0xFFFF}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0xB3*//*NOP*/RegionComposition{},
    /*0xB4*//*LDY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xB5*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xB6*//*LDX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0xFFFF, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xB7*//*NOP*/RegionComposition{},
    /*0xB8*//*CLV*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xB9*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xBA*//*TSX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0xFF, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xBB*//*NOP*/RegionComposition{},
    /*0xBC*//*LDY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xBD*//*LDA*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xBE*//*LDX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xBF*//*NOP*/RegionComposition{},
    /*0xC0*//*CPY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xC1*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0xFFFF, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xC2*//*NMI*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0xFFFF}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0xFF, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0xFFFF, .stack_offset_post_adjust=-1}, .program_counter=Region_ProgramCounter{.PC_increment=0}},
    /*0xC3*//*NOP*/RegionComposition{},
    /*0xC4*//*CPY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xC5*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xC6*//*DEC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=-1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xC7*//*NOP*/RegionComposition{},
    /*0xC8*//*INY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0xFF, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0xFF, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xC9*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xCA*//*DEX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0xFF, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=-1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xCB*//*NOP*/RegionComposition{},
    /*0xCC*//*CPY*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0xFF, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xCD*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xCE*//*DEC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=-1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xCF*//*NOP*/RegionComposition{},
    /*0xD0*//*BNE*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0xFF, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xD1*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0xFFFF, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xD2*//*NOP*/RegionComposition{},
    /*0xD3*//*NOP*/RegionComposition{},
    /*0xD4*//*NOP*/RegionComposition{},
    /*0xD5*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xD6*//*DEC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=-1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xD7*//*NOP*/RegionComposition{},
    /*0xD8*//*CLD*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0x00, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xD9*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xDA*//*NOP*/RegionComposition{},
    /*0xDB*//*NOP*/RegionComposition{},
    /*0xDC*//*NOP*/RegionComposition{},
    /*0xDD*//*CMP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0xFF, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xDE*//*DEC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0xFFFF, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=-1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xDF*//*NOP*/RegionComposition{},
    /*0xE0*//*CPX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0xFF, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xE1*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0xFFFF, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xE2*//*NOP*/RegionComposition{},
    /*0xE3*//*NOP*/RegionComposition{},
    /*0xE4*//*CPX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0xFF, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xE5*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=3}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xE6*//*INC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0xFFFF, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0xFFFF, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xE7*//*NOP*/RegionComposition{},
    /*0xE8*//*INX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0xFF, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0xFF, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xE9*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xEA*//*NOP*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xEB*//*NOP*/RegionComposition{},
    /*0xEC*//*CPX*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0xFF, .Y_compare_with_value1=0x00, .value1_out=0xFF, .value3_from_carry=0xFF}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xED*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xEE*//*INC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0xFFFF, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0xFFFF, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xEF*//*NOP*/RegionComposition{},
    /*0xF0*//*BEQ*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0xFF, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=1, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0xFF, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xF1*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0xFFFF, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=5}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xF2*//*NOP*/RegionComposition{},
    /*0xF3*//*NOP*/RegionComposition{},
    /*0xF4*//*NOP*/RegionComposition{},
    /*0xF5*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xF6*//*INC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0xFFFF, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0xFFFF, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=6}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=2}},
    /*0xF7*//*NOP*/RegionComposition{},
    /*0xF8*//*SED*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=2}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0xFF, .N_adjust=0, .N_adjust_source=0, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0x00, .D_adjust=1, .I_keep=0xFF, .I_adjust=0, .Z_keep=0xFF, .Z_adjust=0, .Z_adjust_source=0, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=1}},
    /*0xF9*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0x0000, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0xFFFF, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xFA*//*NOP*/RegionComposition{},
    /*0xFB*//*NOP*/RegionComposition{},
    /*0xFC*//*NOP*/RegionComposition{},
    /*0xFD*//*SBC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0x0000, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=4}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=0}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0xFF, .value2_from_overflow=0xFF, .value3_from_carry=0xFF}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0xFF, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0x00, .O_adjust=0, .O_adjust_direct=2, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0x00, .C_adjust=0, .C_adjust_direct=3, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0x0000, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xFE*//*INC*/RegionComposition{.wire=Region_Wire{.value1_from_data1=0x00, .value1_from_zeropage_dereference=0x0000, .value1_from_absolute_dereference=0x0000, .value1_from_zeropage_x_dereference=0x0000, .value1_from_absolute_x_dereference=0xFFFF, .value1_from_indirect_x_dereference=0x0000, .value1_from_zeropage_y_dereference=0x0000, .value1_from_absolute_y_dereference=0x0000, .value1_from_indirect_y_dereference=0x0000, .value1_from_stack_offset=0x00, .value1_from_A=0x00, .value1_from_X=0x00, .value1_from_Y=0x00, .address_from_absolute=0x0000, .address_from_absolute_y=0x0000, .address_from_absolute_dereference=0x0000, .address_from_zeropage=0x0000, .address_from_zeropage_x=0x0000, .address_from_absolute_x=0xFFFF, .address_from_indirect_x=0x0000, .address_from_zeropage_y=0x0000, .address_from_indirect_y=0x0000, .cycle_base_increment=7}, .compare=Region_Compare{.A_compare_with_value1=0x00, .X_compare_with_value1=0x00, .Y_compare_with_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .boolean_logic=Region_BooleanLogic{.A_AND_value1=0x00, .A_OR_value1=0x00, .A_XOR_value1=0x00, .value1_out=0x00, .value3_out=0x00}, .bit_shift=Region_BitShift{.left_shift_from_value1=0x00, .right_shift_from_value1=0x00, .left_rotate_from_value1=0x00, .right_rotate_from_value1=0x00, .value1_out=0x00, .value3_from_carry=0x00}, .arithmetic=Region_Arithmetic{.value1_increment=1}, .stack_read=Region_StackRead{.value1_from_stack_read=0x0000, .read_special_status_bits=0x00, .stack_offset_pre_adjust=0}, .adc_sbc=Region_ADC_SBC{.value1_from_ADC=0x00, .value1_from_SBC=0x00, .value2_from_overflow=0x00, .value3_from_carry=0x00}, .jsr_rts_rti=Region_JSR_RTS_RTI{.jsr_OK=0x0000, .rts_OK=0x0000, .rti_OK=0x0000, .brk_OK=0x0000, .nmi_OK=0x0000}, .branch=Region_Branch{.flag_match=0, .N_flag_branch=0x00, .O_flag_branch=0x00, .Z_flag_branch=0x00, .C_flag_branch=0x00}, .rewire=Region_Rewire{.value1_from_status_push_bits=0x00, .value2_from_value1_bit6=0x00, .A_from_value1=0x00, .X_from_value1=0x00, .Y_from_value1=0x00, .program_counter_from_address=0x0000, .stack_offset_from_X=0x00}, .implementation_state=Region_ImplementationState{.store_write_from_value1=0x00, .value1_read_from_store=0x00}, .flags=Region_Flags{.N_keep=0x00, .N_adjust=0, .N_adjust_source=1, .O_keep=0xFF, .O_adjust=0, .O_adjust_direct=0, .D_keep=0xFF, .D_adjust=0, .I_keep=0xFF, .I_adjust=0, .Z_keep=0x00, .Z_adjust=0, .Z_adjust_source=1, .C_keep=0xFF, .C_adjust=0, .C_adjust_direct=0, .set_byte_from_value1=0x00}, .write=Region_Write{.memory_write_value1=0xFFFF, .oam_memory_write_value1=0x0000}, .stack_write=Region_StackWrite{.stack_write_value1=0x0000, .stack_offset_post_adjust=0}, .program_counter=Region_ProgramCounter{.PC_increment=3}},
    /*0xFF*//*NOP*/RegionComposition{}
};

OperationInformation operation_info[] = {
    /*0x00*//*BRK*/OperationInformation{.name="BRK", .byte_count=1, .format_type="Implied"},
    /*0x01*//*ORA*/OperationInformation{.name="ORA", .byte_count=2, .format_type="IndirectX"},
    /*0x02*//*NOP*/OperationInformation{},
    /*0x03*//*NOP*/OperationInformation{},
    /*0x04*//*NOP*/OperationInformation{},
    /*0x05*//*ORA*/OperationInformation{.name="ORA", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x06*//*ASL*/OperationInformation{.name="ASL", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x07*//*NOP*/OperationInformation{},
    /*0x08*//*PHP*/OperationInformation{.name="PHP", .byte_count=1, .format_type="Implied"},
    /*0x09*//*ORA*/OperationInformation{.name="ORA", .byte_count=2, .format_type="Immediate"},
    /*0x0A*//*ASL*/OperationInformation{.name="ASL", .byte_count=1, .format_type="Implied"},
    /*0x0B*//*NOP*/OperationInformation{},
    /*0x0C*//*NOP*/OperationInformation{},
    /*0x0D*//*ORA*/OperationInformation{.name="ORA", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0x0E*//*ASL*/OperationInformation{.name="ASL", .byte_count=3, .format_type="Absolute"},
    /*0x0F*//*NOP*/OperationInformation{},
    /*0x10*//*BPL*/OperationInformation{.name="BPL", .byte_count=2, .format_type="Address_Relative"},
    /*0x11*//*ORA*/OperationInformation{.name="ORA", .byte_count=2, .format_type="IndirectY"},
    /*0x12*//*NOP*/OperationInformation{},
    /*0x13*//*NOP*/OperationInformation{},
    /*0x14*//*NOP*/OperationInformation{},
    /*0x15*//*ORA*/OperationInformation{.name="ORA", .byte_count=2, .format_type="ZeropageX"},
    /*0x16*//*ASL*/OperationInformation{.name="ASL", .byte_count=2, .format_type="ZeropageX"},
    /*0x17*//*NOP*/OperationInformation{},
    /*0x18*//*CLC*/OperationInformation{.name="CLC", .byte_count=1, .format_type="Implied"},
    /*0x19*//*ORA*/OperationInformation{.name="ORA", .byte_count=3, .format_type="AbsoluteY"},
    /*0x1A*//*NOP*/OperationInformation{},
    /*0x1B*//*NOP*/OperationInformation{},
    /*0x1C*//*NOP*/OperationInformation{},
    /*0x1D*//*ORA*/OperationInformation{.name="ORA", .byte_count=3, .format_type="AbsoluteX"},
    /*0x1E*//*ASL*/OperationInformation{.name="ASL", .byte_count=3, .format_type="AbsoluteX"},
    /*0x1F*//*NOP*/OperationInformation{},
    /*0x20*//*JSR*/OperationInformation{.name="JSR", .byte_count=3, .format_type="Absolute"},
    /*0x21*//*AND*/OperationInformation{.name="AND", .byte_count=2, .format_type="IndirectX"},
    /*0x22*//*NOP*/OperationInformation{},
    /*0x23*//*NOP*/OperationInformation{},
    /*0x24*//*BIT*/OperationInformation{.name="BIT", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x25*//*AND*/OperationInformation{.name="AND", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x26*//*ROL*/OperationInformation{.name="ROL", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x27*//*NOP*/OperationInformation{},
    /*0x28*//*PLP*/OperationInformation{.name="PLP", .byte_count=1, .format_type="Implied"},
    /*0x29*//*AND*/OperationInformation{.name="AND", .byte_count=2, .format_type="Immediate"},
    /*0x2A*//*ROL*/OperationInformation{.name="ROL", .byte_count=1, .format_type="Implied"},
    /*0x2B*//*NOP*/OperationInformation{},
    /*0x2C*//*BIT*/OperationInformation{.name="BIT", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0x2D*//*AND*/OperationInformation{.name="AND", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0x2E*//*ROL*/OperationInformation{.name="ROL", .byte_count=3, .format_type="Absolute"},
    /*0x2F*//*NOP*/OperationInformation{},
    /*0x30*//*BMI*/OperationInformation{.name="BMI", .byte_count=2, .format_type="Address_Relative"},
    /*0x31*//*AND*/OperationInformation{.name="AND", .byte_count=2, .format_type="IndirectY"},
    /*0x32*//*NOP*/OperationInformation{},
    /*0x33*//*NOP*/OperationInformation{},
    /*0x34*//*NOP*/OperationInformation{},
    /*0x35*//*AND*/OperationInformation{.name="AND", .byte_count=2, .format_type="ZeropageX"},
    /*0x36*//*ROL*/OperationInformation{.name="ROL", .byte_count=2, .format_type="ZeropageX"},
    /*0x37*//*NOP*/OperationInformation{},
    /*0x38*//*SEC*/OperationInformation{.name="SEC", .byte_count=1, .format_type="Implied"},
    /*0x39*//*AND*/OperationInformation{.name="AND", .byte_count=3, .format_type="AbsoluteY"},
    /*0x3A*//*NOP*/OperationInformation{},
    /*0x3B*//*NOP*/OperationInformation{},
    /*0x3C*//*NOP*/OperationInformation{},
    /*0x3D*//*AND*/OperationInformation{.name="AND", .byte_count=3, .format_type="AbsoluteX"},
    /*0x3E*//*ROL*/OperationInformation{.name="ROL", .byte_count=3, .format_type="AbsoluteX"},
    /*0x3F*//*NOP*/OperationInformation{},
    /*0x40*//*RTI*/OperationInformation{.name="RTI", .byte_count=1, .format_type="Implied"},
    /*0x41*//*EOR*/OperationInformation{.name="EOR", .byte_count=2, .format_type="IndirectX"},
    /*0x42*//*NOP*/OperationInformation{},
    /*0x43*//*NOP*/OperationInformation{},
    /*0x44*//*NOP*/OperationInformation{},
    /*0x45*//*EOR*/OperationInformation{.name="EOR", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x46*//*LSR*/OperationInformation{.name="LSR", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x47*//*NOP*/OperationInformation{},
    /*0x48*//*PHA*/OperationInformation{.name="PHA", .byte_count=1, .format_type="Implied"},
    /*0x49*//*EOR*/OperationInformation{.name="EOR", .byte_count=2, .format_type="Immediate"},
    /*0x4A*//*LSR*/OperationInformation{.name="LSR", .byte_count=1, .format_type="Implied"},
    /*0x4B*//*NOP*/OperationInformation{},
    /*0x4C*//*JMP*/OperationInformation{.name="JMP", .byte_count=3, .format_type="Absolute"},
    /*0x4D*//*EOR*/OperationInformation{.name="EOR", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0x4E*//*LSR*/OperationInformation{.name="LSR", .byte_count=3, .format_type="Absolute"},
    /*0x4F*//*NOP*/OperationInformation{},
    /*0x50*//*BVC*/OperationInformation{.name="BVC", .byte_count=2, .format_type="Address_Relative"},
    /*0x51*//*EOR*/OperationInformation{.name="EOR", .byte_count=2, .format_type="IndirectY"},
    /*0x52*//*NOP*/OperationInformation{},
    /*0x53*//*NOP*/OperationInformation{},
    /*0x54*//*NOP*/OperationInformation{},
    /*0x55*//*EOR*/OperationInformation{.name="EOR", .byte_count=2, .format_type="ZeropageX"},
    /*0x56*//*LSR*/OperationInformation{.name="LSR", .byte_count=2, .format_type="ZeropageX"},
    /*0x57*//*NOP*/OperationInformation{},
    /*0x58*//*NOP*/OperationInformation{},
    /*0x59*//*EOR*/OperationInformation{.name="EOR", .byte_count=3, .format_type="AbsoluteY"},
    /*0x5A*//*NOP*/OperationInformation{},
    /*0x5B*//*NOP*/OperationInformation{},
    /*0x5C*//*NOP*/OperationInformation{},
    /*0x5D*//*EOR*/OperationInformation{.name="EOR", .byte_count=3, .format_type="AbsoluteX"},
    /*0x5E*//*LSR*/OperationInformation{.name="LSR", .byte_count=3, .format_type="AbsoluteX"},
    /*0x5F*//*NOP*/OperationInformation{},
    /*0x60*//*RTS*/OperationInformation{.name="RTS", .byte_count=1, .format_type="Implied"},
    /*0x61*//*ADC*/OperationInformation{.name="ADC", .byte_count=2, .format_type="IndirectX"},
    /*0x62*//*NOP*/OperationInformation{},
    /*0x63*//*NOP*/OperationInformation{},
    /*0x64*//*NOP*/OperationInformation{},
    /*0x65*//*ADC*/OperationInformation{.name="ADC", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x66*//*ROR*/OperationInformation{.name="ROR", .byte_count=2, .format_type="ZeropageDereference"},
    /*0x67*//*NOP*/OperationInformation{},
    /*0x68*//*PLA*/OperationInformation{.name="PLA", .byte_count=1, .format_type="Implied"},
    /*0x69*//*ADC*/OperationInformation{.name="ADC", .byte_count=2, .format_type="Immediate"},
    /*0x6A*//*ROR*/OperationInformation{.name="ROR", .byte_count=1, .format_type="Implied"},
    /*0x6B*//*NOP_*/OperationInformation{.name="NOP_", .byte_count=1, .format_type="Implied"},
    /*0x6C*//*JMP*/OperationInformation{.name="JMP", .byte_count=3, .format_type="AbsoluteAddressDereference"},
    /*0x6D*//*ADC*/OperationInformation{.name="ADC", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0x6E*//*ROR*/OperationInformation{.name="ROR", .byte_count=3, .format_type="Absolute"},
    /*0x6F*//*NOP*/OperationInformation{},
    /*0x70*//*BVS*/OperationInformation{.name="BVS", .byte_count=2, .format_type="Address_Relative"},
    /*0x71*//*ADC*/OperationInformation{.name="ADC", .byte_count=2, .format_type="IndirectY"},
    /*0x72*//*NOP*/OperationInformation{},
    /*0x73*//*NOP*/OperationInformation{},
    /*0x74*//*NOP*/OperationInformation{},
    /*0x75*//*ADC*/OperationInformation{.name="ADC", .byte_count=2, .format_type="ZeropageX"},
    /*0x76*//*ROR*/OperationInformation{.name="ROR", .byte_count=2, .format_type="ZeropageX"},
    /*0x77*//*NOP*/OperationInformation{},
    /*0x78*//*SEI*/OperationInformation{.name="SEI", .byte_count=1, .format_type="Implied"},
    /*0x79*//*ADC*/OperationInformation{.name="ADC", .byte_count=3, .format_type="AbsoluteY"},
    /*0x7A*//*NOP*/OperationInformation{},
    /*0x7B*//*NOP*/OperationInformation{},
    /*0x7C*//*NOP*/OperationInformation{},
    /*0x7D*//*ADC*/OperationInformation{.name="ADC", .byte_count=3, .format_type="AbsoluteX"},
    /*0x7E*//*ROR*/OperationInformation{.name="ROR", .byte_count=3, .format_type="AbsoluteX"},
    /*0x7F*//*NOP*/OperationInformation{},
    /*0x80*//*NOP*/OperationInformation{},
    /*0x81*//*STA*/OperationInformation{.name="STA", .byte_count=2, .format_type="IndirectX"},
    /*0x82*//*NOP*/OperationInformation{},
    /*0x83*//*NOP*/OperationInformation{},
    /*0x84*//*STY*/OperationInformation{.name="STY", .byte_count=2, .format_type="Zeropage"},
    /*0x85*//*STA*/OperationInformation{.name="STA", .byte_count=2, .format_type="Zeropage"},
    /*0x86*//*STX*/OperationInformation{.name="STX", .byte_count=2, .format_type="Zeropage"},
    /*0x87*//*NOP*/OperationInformation{},
    /*0x88*//*DEY*/OperationInformation{.name="DEY", .byte_count=1, .format_type="Implied"},
    /*0x89*//*NOP*/OperationInformation{},
    /*0x8A*//*TXA*/OperationInformation{.name="TXA", .byte_count=1, .format_type="Implied"},
    /*0x8B*//*account*/OperationInformation{.name="account", .byte_count=1, .format_type="Implied"},
    /*0x8C*//*STY*/OperationInformation{.name="STY", .byte_count=3, .format_type="Absolute"},
    /*0x8D*//*STA*/OperationInformation{.name="STA", .byte_count=3, .format_type="Absolute"},
    /*0x8E*//*STX*/OperationInformation{.name="STX", .byte_count=3, .format_type="Absolute"},
    /*0x8F*//*NOP*/OperationInformation{},
    /*0x90*//*BCC*/OperationInformation{.name="BCC", .byte_count=2, .format_type="Address_Relative"},
    /*0x91*//*STA*/OperationInformation{.name="STA", .byte_count=2, .format_type="IndirectY"},
    /*0x92*//*NOP*/OperationInformation{},
    /*0x93*//*NOP*/OperationInformation{},
    /*0x94*//*STY*/OperationInformation{.name="STY", .byte_count=2, .format_type="ZeropageX"},
    /*0x95*//*STA*/OperationInformation{.name="STA", .byte_count=2, .format_type="ZeropageX"},
    /*0x96*//*STX*/OperationInformation{.name="STX", .byte_count=2, .format_type="ZeropageY"},
    /*0x97*//*NOP*/OperationInformation{},
    /*0x98*//*TYA*/OperationInformation{.name="TYA", .byte_count=1, .format_type="Implied"},
    /*0x99*//*STA*/OperationInformation{.name="STA", .byte_count=3, .format_type="AbsoluteY"},
    /*0x9A*//*TXS*/OperationInformation{.name="TXS", .byte_count=1, .format_type="Implied"},
    /*0x9B*//*NOP*/OperationInformation{},
    /*0x9C*//*NOP*/OperationInformation{},
    /*0x9D*//*STA*/OperationInformation{.name="STA", .byte_count=3, .format_type="AbsoluteX"},
    /*0x9E*//*NOP*/OperationInformation{},
    /*0x9F*//*NOP*/OperationInformation{},
    /*0xA0*//*LDY*/OperationInformation{.name="LDY", .byte_count=2, .format_type="Immediate"},
    /*0xA1*//*LDA*/OperationInformation{.name="LDA", .byte_count=2, .format_type="IndirectX"},
    /*0xA2*//*LDX*/OperationInformation{.name="LDX", .byte_count=2, .format_type="Immediate"},
    /*0xA3*//*NOP*/OperationInformation{},
    /*0xA4*//*LDY*/OperationInformation{.name="LDY", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xA5*//*LDA*/OperationInformation{.name="LDA", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xA6*//*LDX*/OperationInformation{.name="LDX", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xA7*//*NOP*/OperationInformation{},
    /*0xA8*//*TAY*/OperationInformation{.name="TAY", .byte_count=1, .format_type="Implied"},
    /*0xA9*//*LDA*/OperationInformation{.name="LDA", .byte_count=2, .format_type="Immediate"},
    /*0xAA*//*TAX*/OperationInformation{.name="TAX", .byte_count=1, .format_type="Implied"},
    /*0xAB*//*DMA_read1*/OperationInformation{.name="DMA_read1", .byte_count=1, .format_type="Implied"},
    /*0xAC*//*LDY*/OperationInformation{.name="LDY", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0xAD*//*LDA*/OperationInformation{.name="LDA", .byte_count=3, .format_type="Absolute"},
    /*0xAE*//*LDX*/OperationInformation{.name="LDX", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0xAF*//*NOP*/OperationInformation{},
    /*0xB0*//*BCS*/OperationInformation{.name="BCS", .byte_count=2, .format_type="Address_Relative"},
    /*0xB1*//*LDA*/OperationInformation{.name="LDA", .byte_count=2, .format_type="IndirectY"},
    /*0xB2*//*DMA_write1*/OperationInformation{.name="DMA_write1", .byte_count=1, .format_type="Implied"},
    /*0xB3*//*NOP*/OperationInformation{},
    /*0xB4*//*LDY*/OperationInformation{.name="LDY", .byte_count=2, .format_type="ZeropageX"},
    /*0xB5*//*LDA*/OperationInformation{.name="LDA", .byte_count=2, .format_type="ZeropageX"},
    /*0xB6*//*LDX*/OperationInformation{.name="LDX", .byte_count=2, .format_type="ZeropageY"},
    /*0xB7*//*NOP*/OperationInformation{},
    /*0xB8*//*CLV*/OperationInformation{.name="CLV", .byte_count=1, .format_type="Implied"},
    /*0xB9*//*LDA*/OperationInformation{.name="LDA", .byte_count=3, .format_type="AbsoluteY"},
    /*0xBA*//*TSX*/OperationInformation{.name="TSX", .byte_count=1, .format_type="Implied"},
    /*0xBB*//*NOP*/OperationInformation{},
    /*0xBC*//*LDY*/OperationInformation{.name="LDY", .byte_count=3, .format_type="AbsoluteX"},
    /*0xBD*//*LDA*/OperationInformation{.name="LDA", .byte_count=3, .format_type="AbsoluteX"},
    /*0xBE*//*LDX*/OperationInformation{.name="LDX", .byte_count=3, .format_type="AbsoluteY"},
    /*0xBF*//*NOP*/OperationInformation{},
    /*0xC0*//*CPY*/OperationInformation{.name="CPY", .byte_count=2, .format_type="Immediate"},
    /*0xC1*//*CMP*/OperationInformation{.name="CMP", .byte_count=2, .format_type="IndirectX"},
    /*0xC2*//*NMI*/OperationInformation{.name="NMI", .byte_count=1, .format_type="Implied"},
    /*0xC3*//*NOP*/OperationInformation{},
    /*0xC4*//*CPY*/OperationInformation{.name="CPY", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xC5*//*CMP*/OperationInformation{.name="CMP", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xC6*//*DEC*/OperationInformation{.name="DEC", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xC7*//*NOP*/OperationInformation{},
    /*0xC8*//*INY*/OperationInformation{.name="INY", .byte_count=1, .format_type="Implied"},
    /*0xC9*//*CMP*/OperationInformation{.name="CMP", .byte_count=2, .format_type="Immediate"},
    /*0xCA*//*DEX*/OperationInformation{.name="DEX", .byte_count=1, .format_type="Implied"},
    /*0xCB*//*NOP*/OperationInformation{},
    /*0xCC*//*CPY*/OperationInformation{.name="CPY", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0xCD*//*CMP*/OperationInformation{.name="CMP", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0xCE*//*DEC*/OperationInformation{.name="DEC", .byte_count=3, .format_type="Absolute"},
    /*0xCF*//*NOP*/OperationInformation{},
    /*0xD0*//*BNE*/OperationInformation{.name="BNE", .byte_count=2, .format_type="Address_Relative"},
    /*0xD1*//*CMP*/OperationInformation{.name="CMP", .byte_count=2, .format_type="IndirectY"},
    /*0xD2*//*NOP*/OperationInformation{},
    /*0xD3*//*NOP*/OperationInformation{},
    /*0xD4*//*NOP*/OperationInformation{},
    /*0xD5*//*CMP*/OperationInformation{.name="CMP", .byte_count=2, .format_type="ZeropageX"},
    /*0xD6*//*DEC*/OperationInformation{.name="DEC", .byte_count=2, .format_type="ZeropageX"},
    /*0xD7*//*NOP*/OperationInformation{},
    /*0xD8*//*CLD*/OperationInformation{.name="CLD", .byte_count=1, .format_type="Implied"},
    /*0xD9*//*CMP*/OperationInformation{.name="CMP", .byte_count=3, .format_type="AbsoluteY"},
    /*0xDA*//*NOP*/OperationInformation{},
    /*0xDB*//*NOP*/OperationInformation{},
    /*0xDC*//*NOP*/OperationInformation{},
    /*0xDD*//*CMP*/OperationInformation{.name="CMP", .byte_count=3, .format_type="AbsoluteX"},
    /*0xDE*//*DEC*/OperationInformation{.name="DEC", .byte_count=3, .format_type="AbsoluteX"},
    /*0xDF*//*NOP*/OperationInformation{},
    /*0xE0*//*CPX*/OperationInformation{.name="CPX", .byte_count=2, .format_type="Immediate"},
    /*0xE1*//*SBC*/OperationInformation{.name="SBC", .byte_count=2, .format_type="IndirectX"},
    /*0xE2*//*NOP*/OperationInformation{},
    /*0xE3*//*NOP*/OperationInformation{},
    /*0xE4*//*CPX*/OperationInformation{.name="CPX", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xE5*//*SBC*/OperationInformation{.name="SBC", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xE6*//*INC*/OperationInformation{.name="INC", .byte_count=2, .format_type="ZeropageDereference"},
    /*0xE7*//*NOP*/OperationInformation{},
    /*0xE8*//*INX*/OperationInformation{.name="INX", .byte_count=1, .format_type="Implied"},
    /*0xE9*//*SBC*/OperationInformation{.name="SBC", .byte_count=2, .format_type="Immediate"},
    /*0xEA*//*NOP*/OperationInformation{.name="NOP", .byte_count=1, .format_type="Implied"},
    /*0xEB*//*NOP*/OperationInformation{},
    /*0xEC*//*CPX*/OperationInformation{.name="CPX", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0xED*//*SBC*/OperationInformation{.name="SBC", .byte_count=3, .format_type="AbsoluteDereference"},
    /*0xEE*//*INC*/OperationInformation{.name="INC", .byte_count=3, .format_type="Absolute"},
    /*0xEF*//*NOP*/OperationInformation{},
    /*0xF0*//*BEQ*/OperationInformation{.name="BEQ", .byte_count=2, .format_type="Address_Relative"},
    /*0xF1*//*SBC*/OperationInformation{.name="SBC", .byte_count=2, .format_type="IndirectY"},
    /*0xF2*//*NOP*/OperationInformation{},
    /*0xF3*//*NOP*/OperationInformation{},
    /*0xF4*//*NOP*/OperationInformation{},
    /*0xF5*//*SBC*/OperationInformation{.name="SBC", .byte_count=2, .format_type="ZeropageX"},
    /*0xF6*//*INC*/OperationInformation{.name="INC", .byte_count=2, .format_type="ZeropageX"},
    /*0xF7*//*NOP*/OperationInformation{},
    /*0xF8*//*SED*/OperationInformation{.name="SED", .byte_count=1, .format_type="Implied"},
    /*0xF9*//*SBC*/OperationInformation{.name="SBC", .byte_count=3, .format_type="AbsoluteY"},
    /*0xFA*//*NOP*/OperationInformation{},
    /*0xFB*//*NOP*/OperationInformation{},
    /*0xFC*//*NOP*/OperationInformation{},
    /*0xFD*//*SBC*/OperationInformation{.name="SBC", .byte_count=3, .format_type="AbsoluteX"},
    /*0xFE*//*INC*/OperationInformation{.name="INC", .byte_count=3, .format_type="AbsoluteX"},
    /*0xFF*//*NOP*/OperationInformation{}
};
